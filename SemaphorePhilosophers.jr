import edu.ucdavis.jr.JR;
import edu.ucdavis.jr.QuiescenceRegistrationException;

import java.util.concurrent.ThreadLocalRandom;

public class SemaphorePhilosophers {

    // Program duration in seconds
    private static final int PROGRAM_DURATION_SECONDS = 10;

    // Process that stops the program after a certain time
    private static process EndProgram {
        try {
            Thread.sleep(PROGRAM_DURATION_SECONDS * 1000);
        } catch (InterruptedException e) {
            System.err.println("NEVER INTERRUPT A THINKING PHILOSOPHER. NEVER. JUST DON'T. IT'S THE ONLY THING SOCRATES KNEW.");
        }
        JR.exit(1);
    }
    
    // Called when the program is in trouble !
    public static op void unexpectedEnd() {
        System.err.println("PROCESSES ARE EITHER IN A DEADLOCK OR ALL DEAD!!!");
    }

    // Program entry point
    public static void main(String[] args) {
        try {
            JR.registerQuiescenceAction(unexpectedEnd);
        } catch (QuiescenceRegistrationException e) {
            e.printStackTrace();
        }
    }
}
